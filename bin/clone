#!/usr/bin/env bash
################################ OPTIONAL INPUT PARAMETERS ################################
typeset repoUrl=$1
typeset repoPath=$2


declare -a globals
declare -a args="$@"
################################ LIBRARIES SHARED OVER ALL CW SCRIPTS ################################
  #
  ## Exit code of the script
  ## 0 - success
  ## 1 - un-success (bad options/... etc)
  ## 2 - unexpected error (wrong code)
  #
declare ret=0

. $(dirname $0)/lib/mfs.sh
. $(dirname $0)/lib/shared_functions.sh

# Maybe we trying to cloning inside of the existing branding repo?
# Right now it doesn't permitted
exists=$(git rev-parse --git-dir &> /dev/null)
if (( ! $? )); then
  # TODO instead of 'cloning' add repo as submodule
#  die "It's not permitted to clone inside of an existing git repo. Look in "$(dirname $0)"/Readme.MD for more information"
  exit 0
fi

cw_echo "Will clone repository $repoUrl to $repoPath"
git clone "$@"

#set -x
if [[ -z "${repoPath}" ]]; then
  # no explicit destination repository given
  # take from last created directory
  for i in `ls -t1 | grep -v ^.$`; do
    repoPath=${i};
    break;
  done
fi

cd "$repoPath"

#pushd . &> /dev/null
git submodule update --recursive --init

#set -x
umbrella_bootstrap

cwRoot="${globals[$G_ROOT_DIR]}"
#popd &> /dev/null

doSync=1
check_branch_sync "${cwRoot}" 1
ret=$?

umbrella_finalize
exit ${ret}
