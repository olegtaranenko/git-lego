#!/usr/bin/env bash
set +o posix

################################ LIBRARIES SHARED OVER ALL CW SCRIPTS ################################

  #
  ## Exit code of the script
  ## 0 - success
  ## 1 - un-success (bad options/... etc)
  ## 2 - unexpected error (wrong code)
  #
declare ret=0

args=()

################################ STANDARD BOOTSTRAP CALL ################################
umbrella_bootstrap


################################ BRANCH-SPECIFIC HELP ################################
function show_help() {
cat << EOF

NAME:
    ${FLAGS_PREFIX} status in git umbrella-managed modules

SYNOPSIS:
    '${FLAGS_PREFIX} [<any-git-commit-options>] [-v|--verbose] [<path-resolution>] -- [[<module-name>] ...]'

DESCRIPTION:


EXAMPLES:
    '${FLAGS_PREFIX} -v .' -> show verbose status for current module only


OPTIONS:
      --help|-h|-\?
          get this help

      --
          marks state after which repositories will be shown in status.


EOF
}

typeset verbose=0
#typeset doRecursive=0
typeset doTags=1

typeset initialPath
typeset modulePath
typeset moduleName
typeset moduleFilePath
typeset moduleInitialized
typeset moduleGitDir
#set -x

################################ PARAMETERS PARSING ################################
while [[ -n $1 ]]; do
  noAppendArg=0
  case $1 in
    -h|-\?|--help)
      show_help
      exit
      ;;
    -v|--verbose)
      verbose=$((verbose + 1)) # Each -v argument adds 1 to verbosity.
      ;;

    --tags)
      doTags=1
      ;;
    --no-tags)
      doTags=0
      ;;

    *)
      if [[ -z ${1%%-*} ]]; then
        args+=($1)
      elif [[ -z ${initialPath} ]]; then
        initialPath=$1
      else
        die "error in parameters [$1]"
      fi
      ;;
  esac
  shift
done

# explicit overriding current settings?
# TODO take into account this setting
#       --no-tags
#           By default, tags that point at objects that are downloaded from the remote repository are fetched and
#           stored locally. This option disables this automatic tag following. The default behavior for a remote
#           may be specified with the remote.<name>.tagOpt setting. See git-config(1).
#  NOTE
#  git pull --tags override existing tags:
#  For example
#    git pull --tags
#    stdin: is not a tty
#    remote: Counting objects: 3, done.
#    remote: Total 3 (delta 0), reused 0 (delta 0)
#    Unpacking objects: 100% (3/3), done.
#    From ssh://git.fairport.com.au:2223/home/git/git/ext
#     t [tag update]      extjs-6.5.2 -> extjs-6.5.2
#    You are not currently on a branch.


if (( "$doTags" )); then
  args+=("--tags");
else
  args+=("--no-tags");
fi

################################ SCRIPT SPECIFIC METHODS ################################
function prepare_pull_level () {
  local modulePath="$1"
  local moduleName="$2"
  local levelPath="$3"
  local ret=0

  pushd "$levelPath" &>/dev/null

  module_porcelain_status "$modulePath" "pull"

  # TODO check functionality after 'quick path' refactoring
  drop_to_affected "$modulePath"

  # do recurse call for every sub-repos
  while read -a module; do
    local subModule="${module[0]}"
    local localPath="${module[1]}"
    local path="$levelPath"/"$localPath"

    local childModulePath="$modulePath"
    [[ "${modulePath:(-1)}" != "/" ]] && childModulePath+="/"
    childModulePath+="$subModule"

    prepare_pull_level "$childModulePath" "$subModule" "$path"
    ret=$? || "$ret"

  done < <(git config -f .gitmodules --get-regexp "submodule.*.path" | sed -E "s/submodule\.(.*)\.path/\1/")

  popd &>/dev/null
  return "$ret"

}  ## of pull_level


################################ MAIN SCRIPT LOGIC ################################
#set -x
cmd_default() {
  typeset dieMsg
  typeset affectedModules=()
  typeset skippedModules=()
  typeset affected=0
  typeset vetoed=0

  cd "$moduleFilePath"

  prepare_pull_level "$modulePath" "$moduleName" "$moduleFilePath"

  if (( "$affected" )); then

    while read -a module; do
      cd "${module[$MCI_FILEPATH]}"
      level_verbose_about_to "${module[@]}"

      git pull "${args[@]}"
    done < <(cat ${globals[$G_AFFECTED_MODULES]} | (tac 2> /dev/null || tail -r))
  fi

  cw_show_affected_skipped

  umbrella_finalize

  exit $ret
}